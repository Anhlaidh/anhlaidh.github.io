<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Oxide</title>
    <link>http://blog.oxide.ink/en/posts/</link>
    <description>Recent content in Posts on Oxide</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 08 Jun 2021 16:59:00 +0800</lastBuildDate><atom:link href="http://blog.oxide.ink/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java笔记02</title>
      <link>http://blog.oxide.ink/en/posts/test007/</link>
      <pubDate>Tue, 08 Jun 2021 16:59:00 +0800</pubDate>
      
      <guid>http://blog.oxide.ink/en/posts/test007/</guid>
      <description>Maven Junit 测试 单元测试：对软件中最小可测试单元进行检查和验证，通常是一个函数/方法（属于白盒测试）
集成测试： 将多个单元相互作用，形成一个整体，对整体协调性进行测试 白盒测试： 全面了解程序内部逻辑结构，对所有的逻辑路径都进行测试，一般由程序员完成
黑盒测试：又名功能测试，将程序看作不可打开的盒子，一般由独立使用者完成 自动测试：用程序批量、反复的测试程序，并可自动检查程序结果是否满足预定的要求
手动测试：手动执行程序，手动输入所需要的参数，手动检查程序结果是否满足预定的要求 回归测试：修改旧代码后，重新进行测试以确认修改没有引入新的错误或导致其他代码产生错误
深入学习：软件测试-基于问题驱动模式 朱少民
Junit import static 导入该包内的所有静态方法，使用时可不加类名
Triangle
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package JavaLearning_Advanced.Maven; /** * @Description: * @author: Anhlaidh * @date: 2020/3/23 0023 13:42 */ public class Triangle { public boolean judgeEdges(int a, int b, int c) { boolean result = true; //边长非负性 if (a &amp;lt;= 0 || b &amp;lt;= 0 || c &amp;lt;= 0) { return false; } //两边和大于第三边 if (a+b&amp;lt;=c) { return false;} if (b+c&amp;lt;=a) { return false;} if (c+a&amp;lt;=b) { return false;} return true; } } testTriangle 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import JavaLearning_Advanced.</description>
    </item>
    
  </channel>
</rss>
